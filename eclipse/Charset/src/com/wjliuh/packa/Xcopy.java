/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wjliuh.packa;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle.ComponentPlacement;

/**
 *
 * @author JIE
 */
public class Xcopy extends javax.swing.JFrame {

    /**
     * Creates new form Xcopy
     */
    public Xcopy() {
        initComponents();
        ok.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
				String src = srcText.getText();
				String dest = destText.getText();
				
				try {
					Process pro = Runtime.getRuntime().exec(String.format(command, src,dest));
					BufferedReader br = new BufferedReader(new InputStreamReader(pro.getInputStream(),"ISO8859-1"));
					String line = null;
					while((line = br.readLine())!=null){
						System.out.println(new String(line.getBytes("ISO8859-1"),"gbk"));
						textArea.append(new String(line.getBytes("ISO8859-1"),"gbk"));
						textArea.append("\n");
					}
					br.close();
					pro.destroy();
                                        
				} catch (Exception e1) {
					e1.printStackTrace();
				}
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        srcLabel = new javax.swing.JLabel();
        srcText = new javax.swing.JTextField();
        destLabel = new javax.swing.JLabel();
        destText = new javax.swing.JTextField();
        ok = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        srcLabel.setText("源文件夹");

        srcText.setText("jTextField1");
        srcText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcTextActionPerformed(evt);
            }
        });

        destLabel.setText("到文件夹");

        destText.setText("jTextField2");
        destText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destTextActionPerformed(evt);
            }
        });

        ok.setText("Ok");

        cancel.setText("Cancel");
        
        JScrollPane scrollPane = new JScrollPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(ok)
        					.addGap(18)
        					.addComponent(cancel))
        				.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        					.addGap(39)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(scrollPane, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(destLabel)
        								.addComponent(srcLabel))
        							.addPreferredGap(ComponentPlacement.UNRELATED)
        							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(srcText, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
        								.addComponent(destText, Alignment.LEADING, 419, 419, 419))))))
        			.addGap(30))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(61)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(srcLabel)
        				.addComponent(srcText, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(23)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(destLabel)
        				.addComponent(destText, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(ok)
        				.addComponent(cancel))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
        			.addContainerGap())
        );
        
        textArea = new JTextArea();
        scrollPane.setViewportView(textArea);
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>                        

    private void destTextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void srcTextActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Xcopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Xcopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Xcopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Xcopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Xcopy().setVisible(true);
            }
        });
    }

    public static void testCharset(String line) throws IOException {  
    // TODO Auto-generated method stub  
    byte[] buf = new byte[4096];  
   //String fileName = args[0];  
    String fileName = "d:/test.txt";  
    java.io.FileInputStream fis = new java.io.FileInputStream(fileName);  
  
    // (1)  
    org.mozilla.universalchardet.UniversalDetector detector = new  org.mozilla.universalchardet.UniversalDetector(null);  
  
    // (2)  
    int nread;  
    while ((nread = fis.read(buf)) > 0 && !detector.isDone()) {  
      detector.handleData(buf, 0, nread);  
    }  
    // (3)  
    detector.dataEnd();  
  
    // (4)  
    String encoding = detector.getDetectedCharset();  
    if (encoding != null) {  
      System.out.println("Detected encoding = " + encoding);  
    } else {  
      System.out.println("No encoding detected.");  
    }  
  
    // (5)  
    detector.reset();  
     
     
    String cread;  
    StringBuffer content = new StringBuffer();  
     
    InputStreamReader r = new InputStreamReader(new FileInputStream(fileName), encoding);  
    BufferedReader   in = new BufferedReader(r);  
    while ((cread = in.readLine()) != null) {  
        content.append(cread);  
    }  
    System.out.print(content.toString());  
  
}  
    String command  = "xcopy %s %s\\/s /y";
    // Variables declaration - do not modify                     
    private javax.swing.JButton cancel;
    private javax.swing.JLabel destLabel;
    private javax.swing.JTextField destText;
    private javax.swing.JButton ok;
    private javax.swing.JLabel srcLabel;
    private javax.swing.JTextField srcText;
    private JTextArea textArea;
}
