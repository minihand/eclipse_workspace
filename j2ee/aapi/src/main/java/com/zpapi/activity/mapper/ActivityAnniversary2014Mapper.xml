<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zpapi.activity.dao.ActivityAnniversary2014Mapper" >
  <resultMap id="BaseResultMap" type="com.zpapi.activity.model.ActivityAnniversary2014" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="is_get_card" property="isGetCard" jdbcType="TINYINT" />
    <result column="finished" property="finished" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_id, time, level, is_get_card, finished
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zpapi.activity.model.ActivityAnniversary2014Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from activity_anniversary_2014
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity_anniversary_2014
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activity_anniversary_2014
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zpapi.activity.model.ActivityAnniversary2014Example" >
    delete from activity_anniversary_2014
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zpapi.activity.model.ActivityAnniversary2014"  useGeneratedKeys="true" keyProperty="id">
    insert into activity_anniversary_2014 
    (member_id, 
    time, 
    level, 
    is_get_card, 
    finished)
    values (
     #{memberId,jdbcType=BIGINT},
      UNIX_TIMESTAMP(),
      #{level,jdbcType=TINYINT}, 
      #{isGetCard,jdbcType=TINYINT}, 
      #{finished,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zpapi.activity.model.ActivityAnniversary2014" >
    insert into activity_anniversary_2014
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="isGetCard != null" >
        is_get_card,
      </if>
      <if test="finished != null" >
        finished,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="time != null" >
        UNIX_TIMESTAMP(),
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="isGetCard != null" >
        #{isGetCard,jdbcType=TINYINT},
      </if>
      <if test="finished != null" >
        #{finished,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zpapi.activity.model.ActivityAnniversary2014Example" resultType="java.lang.Integer" >
    select count(*) from activity_anniversary_2014
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity_anniversary_2014
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.isGetCard != null" >
        is_get_card = #{record.isGetCard,jdbcType=TINYINT},
      </if>
      <if test="record.finished != null" >
        finished = #{record.finished,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity_anniversary_2014
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=BIGINT},
      time = #{record.time,jdbcType=INTEGER},
      level = #{record.level,jdbcType=TINYINT},
      is_get_card = #{record.isGetCard,jdbcType=TINYINT},
      finished = #{record.finished,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zpapi.activity.model.ActivityAnniversary2014" >
    update activity_anniversary_2014
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="isGetCard != null" >
        is_get_card = #{isGetCard,jdbcType=TINYINT},
      </if>
      <if test="finished != null" >
        finished = #{finished,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zpapi.activity.model.ActivityAnniversary2014" >
    update activity_anniversary_2014
    set member_id = #{memberId,jdbcType=BIGINT},
      time = #{time,jdbcType=INTEGER},
      level = #{level,jdbcType=TINYINT},
      is_get_card = #{isGetCard,jdbcType=TINYINT},
      finished = #{finished,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
	<select id="countByMemberid" resultType="int">
		SELECT count(1)
	    <![CDATA[
		    FROM activity_anniversary_2014 
	        WHERE 
		        member_id = #{memberid} and FROM_UNIXTIME(time,'%Y%m%d') = FROM_UNIXTIME(UNIX_TIMESTAMP(),'%Y%m%d')
		        and finished = 1
	    ]]>
	</select>
	<select id="findByMemberid" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
	    <![CDATA[
		    FROM activity_anniversary_2014 
	        WHERE 
		        member_id = #{memberid} and finished = 0 and FROM_UNIXTIME(time,'%Y%m%d') = FROM_UNIXTIME(UNIX_TIMESTAMP(),'%Y%m%d')
	    ]]>
	</select>
	<select id="countAnswerByMemberid" resultType="int">
		SELECT count(1)
	    <![CDATA[
		    FROM activity_anniversary_2014 
	        WHERE 
		        member_id = #{memberid} and finished = 0 and FROM_UNIXTIME(time,'%Y%m%d') = FROM_UNIXTIME(UNIX_TIMESTAMP(),'%Y%m%d')
	    ]]>
	</select>
</mapper>